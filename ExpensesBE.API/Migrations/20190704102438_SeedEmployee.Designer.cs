// <auto-generated />
using System;
using ExpensesBE.API.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpensesBE.API.Migrations
{
    [DbContext(typeof(ExpBEContext))]
    [Migration("20190704102438_SeedEmployee")]
    partial class SeedEmployee
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpensesBE.API.Models.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ExpensesBE.API.Models.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(5);

                    b.Property<Guid?>("DepartmentId");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("MainEmail")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Treshold");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7ba6add-09c4-45f8-8dd0-eaca221e5d93"),
                            Code = "ABA",
                            IsActive = true,
                            MainEmail = "antonio.barbosa@beaudrey.pt",
                            Name = "António Barbosa",
                            Treshold = 250000m
                        },
                        new
                        {
                            Id = new Guid("a3749477-f823-4124-aa4a-fc9ad5e79cd6"),
                            Code = "RAN",
                            IsActive = false,
                            MainEmail = "ricardo.antunes@beaudrey.pt",
                            Name = "Ricardo Antunes",
                            Treshold = 150000m
                        },
                        new
                        {
                            Id = new Guid("70a1f9b9-0a37-4c1a-99b1-c7709fc64167"),
                            Code = "PCR",
                            IsActive = false,
                            MainEmail = "paula.correia@beaudrey.pt",
                            Name = "Paula Correia",
                            Treshold = 150000m
                        },
                        new
                        {
                            Id = new Guid("60188a2b-2784-4fc4-8df8-8919ff838b0b"),
                            Code = "LSI",
                            IsActive = false,
                            MainEmail = "luis.silva@beaudrey.pt",
                            Name = "Luis Silva",
                            Treshold = 150000m
                        },
                        new
                        {
                            Id = new Guid("76053df4-6687-4353-8937-b45556748abe"),
                            Code = "GMA",
                            IsActive = false,
                            MainEmail = "gil.martins@beaudrey.pt",
                            Name = "Gil Martins",
                            Treshold = 150000m
                        },
                        new
                        {
                            Id = new Guid("447eb762-95e9-4c31-95e1-b20053fbe215"),
                            Code = "VCR",
                            IsActive = false,
                            MainEmail = "vitor.correia@beaudrey.pt",
                            Name = "Vitor Correia",
                            Treshold = 150000m
                        },
                        new
                        {
                            Id = new Guid("bc4c35c3-3857-4250-9449-155fcf5109ec"),
                            Code = "JCA",
                            IsActive = false,
                            MainEmail = "joão.costa@beaudrey.pt",
                            Name = "João Costa",
                            Treshold = 150000m
                        });
                });

            modelBuilder.Entity("ExpensesBE.API.Models.Entities.Employee", b =>
                {
                    b.HasOne("ExpensesBE.API.Models.Entities.Department", "DepartmentOfEmployee")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });
#pragma warning restore 612, 618
        }
    }
}
